 Tomcat is an open-source application server developed by the Apache Software Foundation. It is a servlet container that implements the Java Servlet and JavaServer Pages (JSP) specifications, providing a platform for running Java-based web applications. Tomcat is used to deploy, manage, and serve Java web applications, making it a popular choice for hosting dynamic websites and web services written in Java.

Prerequisite
AWS Acccount.
Create Redhat EC2 T2.micro Instance.
Create Security Group and open Tomcat ports or Required ports.
8080 ..etc
Attach Security Group to EC2 Instance.
Install java openJDK 1.8+

####################################################

#!/bin/bash
#TOMCAT.sh

#1. Steps for Installing tomcat9 on rhel7&8
# install Java JDK 1.8+ as a pre-requisit for tomcat to run.
# https://github.com/LandmakTechnology/package-management/tree/main/Tomcat-installation
sudo hostnamectl set-hostname tomcat
cd /opt

# install Java JDK 1.8+ as a pre-requisit for tomcat to run.
sudo yum install git wget vim -y
sudo yum install java-1.8.0-openjdk-devel -y

# Download tomcat software and extract it.
# dowanload and extract tomcat software
sudo wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.83/bin/apache-tomcat-9.0.83.zip
sudo yum install unzip -y
sudo unzip apache-tomcat-9.0.83.zip
sudo rm -rf apache-tomcat-9.0.83.zip

### rename tomcat for good naming convention
sudo mv apache-tomcat-9.0.83 tomcat9

### assign executable permissions to the tomcat home directory
sudo chmod 777 -R /opt/tomcat9
sudo chown ec2-user -R /opt/tomcat9

### start tomcat
sudo sh /opt/tomcat9/bin/startup.sh

# create a soft link to start and stop tomcat from anywhere
# to manage tomcat as a service
sudo ln -s /opt/tomcat9/bin/startup.sh /usr/bin/starttomcat
sudo ln -s /opt/tomcat9/bin/shutdown.sh /usr/bin/stoptomcat
sudo starttomcat
echo "end on tomcat installation"
sudo su - ec2-user

#####################################################

#2. Start of tomcat configuration 

#Tomcat server configuration:
#Search for the files server.xml and context.xml
sudo find / -name server.xml 
sudo find / -name context.xml

sudo vi /opt/tomcat9/conf/server.xml # you can change the port number here
# inside the connector tag
# for now we have changed to port 8177

# To enable external access to tomcat server,
sudo vi /opt/tomcat9/webapps/manager/META-INF/context.xml

# Comment the following line of code in context.xml 

<!--
  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
        allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />
  -->

sudo vi /opt/tomcat9/conf/tomcat-users.xml  # to add users

<user username="landmark" password="admin" roles="manager-gui,admin-gui"/>
<user username="YourName" password="PassWord" roles="manager-gui"/>
	

  










###############################################################
#Deploying from maven server directly to tomcat
# Once tomcat and maven servers are running and configured,

cd ts # cd into ts folder
mv maven-web-application/ web 	# rename the folder to web preferably

cd web/ 			# cd into web folder, here you'll find the target folder

ls target/ 			# here you'll find all your built artifacts

vi key.pem 			# create key.pem in which you past your tomcat server keypair that you saved

ls -l key.pem 			# ensure your key is available and see the permissions

chmod 400 key.pem		# secure the permisions and allow read-only right to user, run previews command to verify

scp -i key.pem target/<your-artifact.war> ec2-user@<public-ip-address>:/opt/tomcat9/webapps/ # deploy .war app to tomcat





